# ARRAY

+:
 1. simple data structure
 2. very fast access the element of array (by index)
-:
 1. you can not size of array once it's created

##STACK
1. It allow access one element at a time. When an element is removed than you access next one
2. LIFO
3. Example1: when you take your letters from post box you verify them one by one from the top. So, you take first the late arrived emails
    note: if a person take mails from the bottom  it's QUEUE, if prioritize - PRIORITY QUEUE
4. Example2: you have long running project A. You boss came and asked do a report, you started to report then you got a call. You stopped doing report and answered call. It's a example of QUEUE (LIFO)

PUSH- put elements on the top of stack
POP - remove elements from the top of stack
PEEK - read element from the top without removing


##QUEUE
Queue is a linear data structure which follows particaular order in which the operations are performed- FIFO
for Queue is used old terminology compared to stack
ENQUEUE - insert element into the front (head) of queue. If the Queue is empty then it throws overflow condition
DEQUEU - remove element from the rear (end) of queue
FRONT - head of queue
REAR - end of queue

#Examples - 1. when resource is shared among accrossed multiple resources like CPU, Scheduling
#CIRQULAR QUEUE = RING BUFFER - to aviod problem when you can not insert more items in the queue when it is not full Rear and Front WRAPS AROUND to the beginning of array

Implementations:
1. [ARRAY implementation] - we need to keep track of Front and Rear indices. We need to increase it in a circular manner(!)


##LINKED LIST
 -LnkedList is is a linear data structure where each element is a separate object.
 -Node - is each element. 
 -Node has 2 elements: data and address(reference to next node)
 -the first Node - is a head Node
 
Types:
 - single linked list - it has a reference to next node
 - double ended linked list - it has a reference to next node and previous node
 - circular linked list - last node points to the first node
   Head of the LinkedList only contains the Address of the First element of the List.
 
 - sorted linked list - values are sorted. A sorted list can also be used to implement a priority queue
 
#Example1 It’s more like human relations. Maybe you ask Harry where Bob is. Harry
doesn’t know, but he thinks Jane might know, so you go and ask Jane. Jane saw Bob
leave the office with Sally, so you call Sally’s cell phone. She


+:
-:
1.  disadvantage of a linked list against an array is that it does not allow direct access to the individual elements. If you want to access a particular item then you have to start at the head and follow the references until you get to that item.
2. It uses more memory compard to array. It needs space to store reference "next" - 4 bytes


##ADT
Abstract Data Types (ADTs). ADT, roughly speaking, it’s a way of looking at a data structure: focusing on what it does and ignoring how it does its job. Stacks and queues are examples of ADTs. Stack and Queue can be implemented by LinkedList
